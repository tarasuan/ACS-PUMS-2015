choropleth2=merge(x=state.df2,y=national.stem.prev.pct.est, by.x="region", by.y = "state.stem.geo")
choropleth2=choropleth[order(choropleth2$order), ]
choropleth2$national.stem.prev.pct.est.d=cut(choropleth2$stem.pct.est, breaks=c(.01,.02,.03,.04,.05,.06,.07,.08,.09,.1), include.lowest=T)
ggplot(choropleth2, aes(long, lat, group = group)) +
geom_polygon(aes(fill = national.stem.prev.pct.est.d), colour = "white", size = 0.2) +
geom_polygon(data = state.df2, colour = "white", fill = NA) +
scale_fill_brewer(palette = "Purples")
diff.stem.pct=national.stem.pct - national.stem.prev.pct
diff.stem.pct
estimate(diff.stem.pct)/standard.error(diff.stem.pct)
t-test = estimate(diff.stem.pct)/standard.error(diff.stem.pct)
t-test = (estimate(diff.stem.pct)/standard.error(diff.stem.pct))
t.test = (estimate(diff.stem.pct)/standard.error(diff.stem.pct))
t.test
print(national.stem.pct[1], national.stem.prev.pct[1])
national.stem.pct[1]
national.stem.prev.pct[1])
national.stem.prev.pct[1]
national.stem.pct[1] - national.stem.prev.pct[1]
alabama.diff = national.stem.pct[1] - national.stem.prev.pct[1]
estimate(alabama.diff)/standard.error(alabama.diff))
estimate(alabama.diff)/standard.error(alabama.diff)
colnames(t.test)
sorted = t.test[order(numer)]
confint(national.stem.pct)
acs.colnames(t.test)
colnames(t.test)
t.test[1]
t.test[,1]
t.test[,2]
row.names(t.test)
geography(t.test)[[1]]
geography(t.test)
class(t.test)
t.test[order(t.test$numer)]
as.data.frame(t.test)
t.test.df = as.data.frame(t.test)
t.test.df
order[order(t.test.df$`( numer / NA )`)]
order(t.test.df)
colnames(t.test.df)
order[order(t.test.df$`( numer / NA )`)]
order(t.test.df[`( numer / NA )`)]
order(t.test.df)[`( numer / NA )`)]
order(t.test.df)[`( numer / NA )`]
colnames(t.test.df)
colnames(t.test.df) = "t.test"
colnames(t.test.df)
order(t.test.df$t.test)
newdata <- t.test[order(-t.test),]
newdata
newdata <- t.test[order(-t.test)]
newdata
newdata <- t.test[order(-t.test),]
newdata
newdata2 <- t.test.df[order(-t.test),]
newdata2
colnames(t.test)
t.test[order(-t.test),]
t.test
national.stem.set
diff.stem.pct
diff.stem.pct[order(-diff.stem.pct),]
order(diff.stem.pct)
class(diff.stem.pct)
diff.stem.pct.df = data.frame(state.stem.geo=geography(diff.stem.pct)[[1]], diff.stem.pct.est=as.numeric(estimate(diff.stem.pct)))
diff.stem.pct.df
order(diff.stem.pct.df)
diff.stem.pct.df[order(-diff.stem.pct.df),]
order(diff.stem.pct.df)
diff.stem.pct.df
diff.stem.pct
t.test.ordered
t.test.ordered = t.test[order(-t.test),]
t.test.ordered
national.stem.pct
as.numeric(diff.stem.pct)
estimate(diff.stem.pct)
estimate
estimate
national.stem.pct
estimate(national.stem.data)
estimate(national.stem.pct)
as.numeric(estimate(national.stem.pct))
diff.stem.pct
as.numeric(estimate(diff.stem.pct))
estimate(diff.stem.pct)
order(estimate(diff.stem.pct))
temp = order(estimate(diff.stem.pct))
temp
order(diff.stem.pct.df)
class(diff.stem.pct.df)
colnames(diff.stem.pct.df)
temp = diff.stem.pct.df[order(-diff.stem.pct.est),]
diff.stem.pct.df$diff.stem.pct.est
temp = diff.stem.pct.df[order(diff.stem.pct.df$diff.stem.pct.est),]
temp
national.stem.pct.df = data.frame(state.stem.geo=geography(national.stem.pct)[[1]], natl.stem.pct.est=as.numeric(estimate(national.stem.pct)))
temp2 = natoinal.stem.pct.df[order(national.stem.pct.df$national.stem.pct.est),]
temp2 = national.stem.pct.df[order(national.stem.pct.df$national.stem.pct.est),]
national.stem.pct.df
national.stem.pct.df$national.stem.pct.est
temp2 = national.stem.pct.df[order(national.stem.pct.df$natl.stem.pct.est),]
temp2
class(t.test)
t.test
diff.stem.pct.df
diff.stem.pct.df$diff.stem.pct.est * 100
diff.stem.pct = diff.stem.pct * 100
diff.stem.pct <- diff.stem.pct * 100
temp3 <- diff.stem.pct.df$diff.stem.pct * 100
temp3
diff.stem.pct.df$diff.stem.pct.est <- diff.stem.pct.df$diff.stem.pct * 100
diff.stem.pct.df
diff.stem.pct.df = data.frame(state.stem.geo=geography(diff.stem.pct)[[1]], diff.stem.pct.est=as.numeric(estimate(diff.stem.pct)))
diff.stem.pct.df
total <- merge(national.stem.pct.df,diff.stem.pct.df, by="state.stem.geo")
total
colnames(t.test)
geography(t.test)
t.test[[1]]
t.test
t.test[1,]
t.test[,1]
t.test[,2]
t.test[1]
t.test[1,1]
t.test[1,]
colnames(t.test)
colnames(t.test)[1] = "state.stem.geo"
colnames(t.test)
t.test
colnames(t.test)[1] = "t.test.results"
t.test
t.test.df = data.frame(t.test)
t.test.df
colnames(t.test.df)
colnames(t.test)[1]
colnames(t.test)[0]
colnames(t.test)[0] = "state.stem.geo"
colnames(t.test)
t.test
colnames(t.test.df)
colnames(t.test.df)[1]
colnames(t.test.df)[0]
colnames(t.test.df)[0] = "state.stem.geo"
t.test.df
t.test.df[0]
t.test.df[1]
dim(t.test.df)
row.names(t.test.df)
data.frame(t(t.test.df))
row.names(t.test)
names <- rownames(t.test)
rownames(t.test) <- NULL
data <-cbind(names, t.test)
data
library(data.table)
setDT(t.test.df, keep.rownames = TRUE)[]
View(data)
data3 = setDT(t.test.df, keep.rownames = TRUE)[]
class(data3)
data3
colnames(data3)[1] <- "state.stem.geo"
data3
test.df = merge(total.df, t.test, by="state.stem.geo")
test.df = merge(total, t.test, by="state.stem.geo")
colnames(total)
colnames(t.test)
test.df = merge(total, data3, by="state.stem.geo")
test.df
national.stem.data = data.frame(state.stem.geo=geography(national.stem.data)[[1]], stem.data.est=as.numeric(estimate(national.stem.data)))
state.df3=map_data("state")
choropleth=merge(x=state.df3,y=national.stem.data, by.x="region", by.y = "state.stem.geo")
choropleth=choropleth[order(choropleth$order), ]
choropleth$national.stem.data.d=cut(choropleth$stem.pct.est, breaks=8, include.lowest=T)
ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = national.stem.data.d), colour = "white", size = 0.2) +
geom_polygon(data = state.df, colour = "white", fill = NA) +
scale_fill_brewer(palette = "Purples")
national.stem.data = data.frame(state.stem.geo=geography(national.stem.data)[[1]], stem.data.est=as.numeric(estimate(national.stem.data)))
geography(national.stem.data)[[1]]
geography(national.stem.data)
national.stem.data
class(national.stem.data)
national.stem.data <- acs.fetch(endyear = 2015, span = 5, geography = us, variable = append(den.var, num.var))
national.stem.data <- acs.fetch(endyear = 2015, span = 5, geography = us, variable = append(den.var, num.var))
national.stem.data
class(national.stem.data)
national.stem.data = data.frame(state.stem.geo=geography(national.stem.data)[[1]], stem.data.est=as.numeric(estimate(national.stem.data)))
state.df3=map_data("state")
choropleth=merge(x=state.df3,y=national.stem.data, by.x="region", by.y = "state.stem.geo")
choropleth=choropleth[order(choropleth$order), ]
choropleth$national.stem.data.d=cut(choropleth$stem.pct.est, breaks=8, include.lowest=T)
choropleth$national.stem.data.d=cut(choropleth$stem.data.est, breaks=8, include.lowest=T)
choropleth$national.stem.data.d=cut(choropleth$stem.data.est, breaks=5, include.lowest=T)
choropleth$national.stem.data.d=cut(choropleth$stem.data.est, breaks=c(1, 1000, 10000, 100000, 1000000), include.lowest=T)
ggplot(choropleth, aes(long, lat, group = group)) +
geom_polygon(aes(fill = national.stem.data.d), colour = "white", size = 0.2) +
geom_polygon(data = state.df, colour = "white", fill = NA) +
scale_fill_brewer(palette = "Purples")
choropleth$national.stem.data.d
stem.data.est
national.stem.data$stem.data.est
national.stem.data
national.stem.data
national.stem.data <- acs.fetch(endyear = 2015, span = 5, geography = us, variable = append(den.var, num.var))
estimate(national.stem.data
estimate(national.stem.data)
as.numeric(estimate(national.stem.data)))
stem.data.est=as.numeric(estimate(national.stem.data))
stem.data.est
national.stem.pct
estimate(national.stem.pct)
diff.stem.pct
estimate(diff.stem.pct)
geography(diff.stem.pct)
estimate(diff.stem.pct)
diff.stem.pct.est=as.numeric(estimate(diff.stem.pct))
diff.stem.pct.est
diff.stem.pct.est = data.frame(state.stem.geo=geography(diff.stem.pct)[[1]], diff.stem.pct.est=as.numeric(estimate(diff.stem.pct)))
state.df3=map_data("state")
choropleth3=merge(x=state.df3,y=diff.stem.pct.est, by.x="region", by.y = "state.stem.geo")
choropleth3=choropleth3[order(choropleth3$order), ]
choropleth3$diff.stem.pct.est.d=cut(choropleth$diff.stem.pct.est, breaks=c(.00001,.0001,.0002,.0003,.0004,.0005,.0006,.0007,.0008,.0009,.001), include.lowest=T)
choropleth3$diff.stem.pct.est.d=cut(choropleth3$diff.stem.pct.est, breaks=c(.00001,.0001,.0002,.0003,.0004,.0005,.0006,.0007,.0008,.0009,.001), include.lowest=T)
scale_fill_brewer(palette = "Purples")
ggplot(choropleth3, aes(long, lat, group = group)) +
geom_polygon(aes(fill = diff.stem.pct.est.d), colour = "white", size = 0.2) +
geom_polygon(data = state.df, colour = "white", fill = NA) +
scale_fill_brewer(palette = "Purples")
choropleth3$diff.stem.pct.est.d=cut(choropleth3$diff.stem.pct.est, breaks=8, include.lowest=T)
choropleth3$diff.stem.pct.est.d=cut(choropleth3$diff.stem.pct.est, breaks=c(.00001,.0001,.0002,.0003,.0004,.0005,.0006,.0007,.0008,.0009,.001), include.lowest=T)
choropleth3$diff.stem.pct.est.d
ggplot(choropleth3, aes(long, lat, group = group)) +
geom_polygon(aes(fill = diff.stem.pct.est.d), colour = "white", size = 0.2) +
geom_polygon(data = state.df3, colour = "white", fill = NA) +
scale_fill_brewer(palette = "Purples")
class(chloropleth3)
View(choropleth3)
chloropleth3
diff.stem.pct.est = data.frame(state.stem.geo=geography(diff.stem.pct)[[1]], diff.stem.pct.est=as.numeric(estimate(diff.stem.pct)))
state.df3=map_data("state")
choropleth3=merge(x=state.df3,y=diff.stem.pct.est, by.x="region", by.y = "state.stem.geo")
choropleth3=choropleth3[order(choropleth3$order), ]
choropleth3
choropleth2
class(state.df3)
summary(state.df3)
dim(state.df3)
merge(x=state.df3,y=diff.stem.pct.est, by.x="region", by.y = "state.stem.geo")
levels(diff.stem.pct.est$state.stem.geo) <- tolower(levels(diff.stem.pct.est$state.stem.geo))
choropleth3=merge(x=state.df3,y=diff.stem.pct.est, by.x="region", by.y = "state.stem.geo")
choropleth3=choropleth3[order(choropleth3$order), ]
choropleth3$diff.stem.pct.est.d=cut(choropleth3$diff.stem.pct.est, breaks=c(.00001,.0001,.0002,.0003,.0004,.0005,.0006,.0007,.0008,.0009,.001), include.lowest=T)
ggplot(choropleth3, aes(long, lat, group = group)) +
geom_polygon(aes(fill = diff.stem.pct.est.d), colour = "white", size = 0.2) +
geom_polygon(data = state.df3, colour = "white", fill = NA) +
scale_fill_brewer(palette = "Purples")
choropleth3$diff.stem.pct.est.d=cut(choropleth3$diff.stem.pct.est, breaks=8, include.lowest=T)
ggplot(choropleth3, aes(long, lat, group = group)) +
geom_polygon(aes(fill = diff.stem.pct.est.d), colour = "white", size = 0.2) +
geom_polygon(data = state.df3, colour = "white", fill = NA) +
scale_fill_brewer(palette = "Purples")
version
version
versioin
version
setwd("~/Development/R_Census/csv_pus")
library(ggplot2)
library(data.table)
cols <- c("RT", "ST", "PWGTP", "AGEP", "CIT", "COW", "ENG", "SCHL", "SEX", "WAGP", "ESR", "FOD1P", "HISP", "MSP", "NATIVITY","PINCP", "RAC1P", "SOCP","ADJINC", "PERNP", "SCIENGP", "SCIENGRLP")
pusa <- fread(file="ss15pusa.csv", select = cols)
pusb <- fread(file="ss15pusb.csv", select = cols)
pus <- rbind(pusa, pusb)
ls.str(pus)
pus$CIT <- factor(pus$CIT)
levels(pus$CIT) <- c("Born in the U.S.", "Born in Puerto Rico, Guam, the U.S. Virgin Islands, or the Northern Marianas", "Born abroad of American parent(s)", ".U.S. citizen by naturalization", "Not a citizen of the U.S.")
pus$CITX <- ifelse(pus$CIT == 5, 0, 1)
pus$COW <- factor(pus$COW)
levels(pus$COW) <- c("Private profit", "Private non-profit", "Local government", "State government", "Federal government", "Self-employed", "Self-employed", "Working without pay", "Unemployed")
pus$ESR <- factor(pus$ESR)
levels(pus$ESR) <- c("Employed", "Employed, not at work", "Unemployed", "Armed forces, at work", "Armed forces, with a job but not at work", "Not in labor force")
summary(pus$ESR)
prop.table(table(pus$ESR)) * 100
pus$MSP <- factor(pus$MSP)
levels(pus$MSP) <- c("Married", "Married", "Widowed", "Divorced", "Separated", "Never married")
pus$MSPX <- ifelse(pus$MSP == "Married", 1, 0)
pus$RAC1P <- factor(pus$RAC1P)
levels(pus$RAC1P) <- c("White", "Black or African American", "American Indian", "Alaska Native", "American Indian and Alaska Native tribes specified or American Indian or Alaska Native",
"Asian", "Native Hawaiian Pacific Islander", "Some Other Race", "Two or More Races")
pus$HISP <- ifelse(pus$HISP == 1, 0, 1)
pus$SEX <- factor(pus$SEX)
levels(pus$SEX) <- c("Male", "Female")
pus$SEXX <- ifelse(pus$SEX == "Male", 0, 1)
pus$ST <- factor(pus$ST)
levels(pus$ST) <- c("Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", "Delaware", "District of Columbia", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New_Hampshire", "New Mexico", "New Jersey", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", "Oregon", "Pennsylvania", "Rhode_Island", "South Carolina", "South Dakota", "Tennessee", "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming")
pus$SCHL <- ifelse(pus$SCHL <= 17, 17, pus$SCHL)
pus$SCHL <- ifelse(pus$SCHL >= 18 & pus$SCHL <= 19, 19, pus$SCHL)
pus$SCHL <- factor(pus$SCHL)
levels(pus$SCHL) <- c("High school or lower", "Some college", "Associate's degree", "Bachelor's degree", "Master's degree", "Professional degree", "Doctorate degree")
pus$AGEPX <- ifelse(pus$AGEP <= 15, 15, pus$AGEP)
pus$AGEPX <- ifelse(pus$AGEPX >=16 & pus$AGEPX <= 20, 20, pus$AGEPX)
pus$AGEPX <- ifelse(pus$AGEPX >=21 & pus$AGEPX <= 30, 30, pus$AGEPX)
pus$AGEPX <- ifelse(pus$AGEPX >=31 & pus$AGEPX <= 40, 40, pus$AGEPX)
pus$AGEPX <- ifelse(pus$AGEPX >=41 & pus$AGEPX <= 50, 50, pus$AGEPX)
pus$AGEPX <- ifelse(pus$AGEPX >=51 & pus$AGEPX <= 60, 60, pus$AGEPX)
pus$AGEPX <- ifelse(pus$AGEPX >=61 & pus$AGEPX <= 70, 70, pus$AGEPX)
pus$AGEPX <- ifelse(pus$AGEPX >=71 & pus$AGEPX <= 80, 80, pus$AGEPX)
pus$AGEPX <- ifelse(pus$AGEPX >=81, 90, pus$AGEPX)
pus$AGEPX <- factor(pus$AGEPX)
levels(pus$AGEPX) <- c("Under 15", "16-20", "21-30", "31-40", "41-50","51-60","61-70","71-80","80+")
pus$ENG[is.na(pus$ENG)] <- 0
pus$ENG <- factor(pus$ENG)
levels(pus$ENG) <- c("English only", "Very well", "Well", "Not well", "Not at all")
pus$NATIVITY <- ifelse(pus$NATIVITY == 1, 0, 1)
ls.str(pus)
pus <- subset(pus, !is.na(WAGP))
ls.str(pus)
x <- scan("Attachment_C_STEM.txt", what = ",", sep = "\n")
y <- strsplit(x, ",")
y <- sapply(y, '[[',1)
stem.grp <- gsub("‐", "", y)
stem.grp <- as.numeric(stem.grp)
x <- scan("IT_occupations.txt", what = ",", sep = "\n")
y <- strsplit(x, ",")
y <- sapply(y, '[[',1)
it.grp <- gsub("‐", "", y)
it.grp <- as.numeric(it.grp)
pus.stem <- subset(pus[pus$SOCP %in% stem.grp])
pus.it <- subset(pus[pus$SOCP %in% it.grp])
require(scales)
qplot(factor(AGEPX), data=pus, geom = 'bar', fill=factor(SCHL), xlab = "age")
ggplot(pus, aes(x=factor(SCHL), fill=factor(SEX))) + geom_bar(position="dodge") + scale_y_continuous(labels = comma) + theme(axis.text.x = element_text(angle = 60, hjust = 1))
qplot(factor(AGEPX), data=pus.it, geom = 'bar', fill=factor(SCHL), main = "IT Edu")
qplot(factor(AGEPX), data=pus.stem, geom = 'bar', fill=factor(SCHL), main = "STEM Edu")
qplot(factor(AGEPX), data=pus, geom = 'bar', fill=factor(SCHL))
ggplot(pus, aes(x = factor(AGEPX), y = log10(WAGP))) + geom_boxplot(aes(fill = AGEPX), alpha = 0.5)
ggplot(pus.it, aes(x = factor(AGEPX), y = log10(WAGP))) + geom_boxplot(aes(fill = AGEPX), alpha = 0.5)
ggplot(pus.stem, aes(x = factor(AGEPX), y = log10(WAGP))) + geom_boxplot(aes(fill = AGEPX), alpha = 0.5)
ggplot(na.omit(pus), aes(x = SCHL, y = log10(WAGP))) +
geom_boxplot(aes(fill = SCHL), alpha = 0.5) +
labs(x = "Education", y = "Wage on Log10 Scale", title = "Wage vs Education") +
stat_summary(fun.y=mean, aes(colour = AGEPX), geom="point", size = 5) +
stat_summary(fun.y=mean, aes(group=AGEPX, colour = AGEPX), geom="line") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
guides(fill = FALSE)
ggplot(na.omit(pus.it), aes(x = SCHL, y = log10(WAGP))) +
geom_boxplot(aes(fill = SCHL), alpha = 0.5) +
labs(x = "Education", y = "Wage on Log10 Scale", title = "Wage vs Education") +
stat_summary(fun.y=mean, aes(colour = AGEPX), geom="point", size = 5) +
stat_summary(fun.y=mean, aes(group=AGEPX, colour = AGEPX), geom="line") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
guides(fill = FALSE)
ggplot(na.omit(pus.stem), aes(x = SCHL, y = log10(WAGP))) +
geom_boxplot(aes(fill = SCHL), alpha = 0.5) +
labs(x = "Education", y = "Wage on Log10 Scale", title = "Wage vs Education") +
stat_summary(fun.y=mean, aes(colour = AGEPX), geom="point", size = 5) +
stat_summary(fun.y=mean, aes(group=AGEPX, colour = AGEPX), geom="line") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
guides(fill = FALSE)
ggplot(na.omit(pus), aes(x = SCHL, y = log10(WAGP))) +
geom_boxplot(aes(fill = SCHL), alpha = 0.5) +
labs(x = "Education", y = "Wage on Log10 Scale", title = "Wage vs Education") +
stat_summary(fun.y=mean, aes(colour = SOCPX), geom="point", size = 5) +
stat_summary(fun.y=mean, aes(group=SOCPX, colour = SOCPX), geom="line") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
guides(fill = FALSE)
qplot(factor(SCHL), data=pus, geom = 'bar', fill=factor(SOCPX), main = "Edu")
pus$STEM <- ifelse(pus$SOCP %in% stem.grp, 1, 0)
pus$IT <- ifelse(pus$SOCP %in% it.grp, 1, 0)
ls.str(pus)
pus = subset(pus, select = -c(RT, ADJINC, AGEP, CIT, FOD1P, MSP, PERNP, PINCP, PWGPT, SEX, SOCP))
pus = subset(pus, select = -c(RT, ADJINC, AGEP, CIT, FOD1P, MSP, PERNP, PINCP, PWGTP, SEX, SOCP))
ls.str(pus)
table (complete.cases (pus))
summary  (train [!complete.cases(pus),])
summary  (pus [!complete.cases(pus),])
pus$SCIENGP <- ifelse(pus$SCIENGP == 1, 1, 0)
pus$SCIENGRLP <- ifelse(pus$SCIENGRLP == 1, 1, 0)
table (complete.cases (pus))
summary  (pus [!complete.cases(pus),])
pus = subset(pus, select = -c(COW ))
#
esr <- subset(pus, is.na(ESR))
summary(esr$WAGP)
summary(esr)
table (complete.cases (pus))
summary  (pus [!complete.cases(pus),])
final <- pus[complete.cases(pus[,pus$ESR]),]
summary(final)
pus$SCIENGP[is.na(pus$SCIENGP)] <- 0
pus$SCIENGRLP[is.na(pus$SCIENGRLP)] <- 0
table (complete.cases (pus))
summary  (pus [!complete.cases(pus),])
final <- pus[complete.cases(pus[,pus$ESR]),]
summary(final)
length(final)
nrow(final)
pus$NATIVITY <- ifelse(pus$NATIVITY == 0, 1, 0)
summary(final)
subset
subset
final1 <- subset(final, !(final$ESR = 'Not in labor force'))
final1 <- subset(final, (final$ESR[1:5]))
final1<-final[!(final$ESR=="Not in labor force"),]
summary(final1)
nrow(final1)
final.target <- ifelse(final$WAGP >= 50000, 1, 0)
head(final.target)
head(final$WAGP)
final = subset(final, select = -c(WAGP ))
summary(final)
final1.target <- ifelse(final1$WAGP >= 50000, 1, 0)
head(final1$WAGP)
final1 = subset(final1, select = -c(WAGP ))
summary(final1)
head(final1.target)
final1$target <- final.target
final1$target <- final1.target
head(final1.target)
head(final1$target)
summary(final1$target)
ls.str(final1)
levels(final1$SCHL)
levels(final1$ENG)
final1$SCHL = ordered(final1$SCHL)
levels(final1$SCHL)
final1$ENG = ordered(final1$ENG) [c(5, 4, 3, 2, 1)]
final1$ENG = ordered(final$ENG, levels(final$ENG)) [c(5, 4, 3, 2, 1)]
nrow(final)
final1 <- subset(final, (final$ESR[1:5]))
final <- pus[complete.cases(pus[,pus$ESR]),]
summary(final)
nrow(final)
final1 <- subset(final, (final$ESR[1:5]))
View(final)
ls.str(pus)
table (complete.cases (pus))
summary  (pus [!complete.cases(pus),])
esr <- subset(pus, is.na(ESR))
summary(esr)
final <- pus[complete.cases(pus[,pus$ESR]),]
final1 <- subset(final, (final$ESR[1:5]))
final1<-final[!(final$ESR=="Not in labor force"),]
levels(final1$ESR)
summary(final1$ENG)
summary(final1$ESR)
final1.target <- ifelse(final1$WAGP >= 50000, 1, 0)
head(final1.target)
head(final1$WAGP)
final1 = subset(final1, select = -c(WAGP ))
summary(final1)
final1$target <- final1.target
head(final1.target)
head(final1$target)
summary(final1$target)
final1$ENG = ordered(final$ENG, levels(final$ENG)) [c(5, 4, 3, 2, 1)]
head(final1$ENG)
summary(final1$ENG)
final1<-final[!(final$ESR=="Not in labor force"),]
summary(final1$ENG)
final1<-final[!(final$ESR=="Not in labor force"),]
levels(final1$ESR)
summary(final1$ESR)
final1$target <- final1.target
summary(final1$target)
levels(final1$ENG)) [c(5, 4, 3, 2, 1)]
summary(final1$ENG)
ls.str(final1)
is.factor(final1$ENG)
is.factor(c(final1$ESR, final1$SCHL)
is.factor(c(final1$ESR, final1$SCHL))
is.factor(final1$SCHL)
is.factor(final1$ENG)
is.factor(final1$RAC1P)
is.factor(final1$AGEPX)
is.factor(final1$ST)
is.ordered(final1$SCHL)
is.ordered(final1$ENG)
final1$SCHL = ordered(final1$SCHL)
is.ordered(final1$SCHL)
levels(final1$SCHL)
final1$ENG = ordered(final1$ENG)
levels(final1$ENG)
levels(final1$ENG)) [c(5, 4, 3, 2, 1)
levels(final1$ENG) [c(5, 4, 3, 2, 1)]
temp = ordered(final1$ENG, levels(final1$ENG) [c(5, 4, 3, 2, 1)])
levels(temp)
final1$ENG = ordered(final1$ENG, levels(final1$ENG) [c(5, 4, 3, 2, 1)])
levels(final1$ENG)
levels(final1$ESR)
table (final1[,c("SEXX", "target")])
table(final1$SEXX)
summary(final1)
library(caret)
library(gbm)
pus <- rbind(pusa, pusb)
pus$CIT <- factor(pus$CIT)
levels(pus$CIT) <- c("Born in the U.S.", "Born in Puerto Rico, Guam, the U.S. Virgin Islands, or the Northern Marianas", "Born abroad of American parent(s)", ".U.S. citizen by naturalization", "Not a citizen of the U.S.")
summary(pus$CIT)
pus$CITX <- ifelse(pus$CIT == 5, 0, 1)
summary(pus$CITX)
library()
install.packages("caret", dependencies = c("Depends", "Suggests"))
library(caret)
set.seed(101)
intrain<- createDataPartition(final1$target,p=0.7,list = FALSE)
version
sessionInfo()
remove.packages(caret)
library(utils)
